#!/usr/bin/env ruby

STDERR.sync = STDOUT.sync = true

require File.expand_path('../../lib/clockwork', __FILE__)
require 'tmpdir'
require 'optparse'

begin
  require 'daemons'
rescue LoadError
  raise "You need to add gem 'daemons' to your Gemfile or Rubygems if you wish to use it."
end

@options = {
  :quiet => true,
  :pid_dir => "#{Dir.tmpdir}",
  :log_output => false,
  :monitor=>false
}

opts = OptionParser.new do |opts|
  opts.banner = "Usage: #{File.basename($0)} -c FILE [options] start|stop|restart|run"
  opts.separator ''
  opts.on_tail('-h', '--help', 'Show this message') do
    puts opts
    exit 1
  end
  opts.on("--pid-dir=DIR", "Alternate directory in which to store the process ids.") do |dir|
    @options[:pid_dir] = dir
  end
  opts.on('-i', '--identifier=STR', 'An identifier for the process.') do |n|
    @options[:identifier] = n
  end
  opts.on('-l', '--log', 'Redirect both STDOUT and STDERR to a logfile named clockwork[.<identifier>].output in the pid-file directory.') do
    @options[:log_output] = true
  end
  opts.on('--log-dir=DIR', 'A specific directory to put the log files into (default location is pid directory).') do | log_dir|
    @options[:log_dir] = log_dir
  end
  opts.on('-m', '--monitor', 'Start monitor process.') do
    @options[:monitor] = true
  end
  opts.on('-c', '--clock=FILE',"Clock .rb file. REQUIRED.") do |clock_file|
    @options[:file] = clock_file
    @options[:file] = "./#{@options[:file]}" unless @options[:file].match(/^[\/.]/)
    @options[:file] = File.expand_path(@options[:file])
  end
end

@args = opts.parse!(ARGV)

unless @options[:file]
  puts "ERROR: --clock=FILE is required"
  puts opts
  exit
end

unless File.exists?(@options[:file])
  puts "ERROR: The file you specified in --clock does not exists"
  puts opts
  exit
end

if @options[:identifier]  
  process_name = "clockwork.#{@options[:identifier]}"
else
  process_name = "clockwork"
end

dir = @options[:pid_dir]
Dir.mkdir(dir) unless File.exists?(dir)

Daemons.run_proc(process_name, :dir => dir, :dir_mode => :normal, :monitor => @options[:monitor], :log_dir => @options[:log_dir], :log_output => @options[:log_output], :ARGV => @args) do |*args|
  require @options[:file]
  
  Clockwork::run
end
